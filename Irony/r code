{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "install.packages(\"ordinal\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RGYi_6v0wn2B",
        "outputId": "66f4ca97-c092-47db-b053-bc097d040c22"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Installing package into ‘/usr/local/lib/R/site-library’\n",
            "(as ‘lib’ is unspecified)\n",
            "\n",
            "also installing the dependencies ‘ucminf’, ‘numDeriv’\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "library(ordinal)"
      ],
      "metadata": {
        "id": "qnKKso7_xACn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "my_data <- read.csv(\"/processed_file.csv\")"
      ],
      "metadata": {
        "id": "GNq1WE8s1aQk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data <- read.csv(\"/processed_file.csv\")"
      ],
      "metadata": {
        "id": "osSzFeHp18Y8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "my_data$response <- factor(my_data$response)\n"
      ],
      "metadata": {
        "id": "ImeAr47b6ecS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "View(my_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Fz0Cp4jx7OQ0",
        "outputId": "b84de55e-5ac9-4b42-e186-0901891393e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    response consent age_range gender question  Answer sup.inf inf.sup equal\n",
              "1   0        1       1         2      sup-inf   4      1       0       0    \n",
              "2   1        1       1         2      sup-inf   4      1       0       0    \n",
              "3   2        1       1         2      sup-inf   4      1       0       0    \n",
              "4   3        1       1         2      sup-inf   4      1       0       0    \n",
              "5   4        1       4         2      sup-inf   3      1       0       0    \n",
              "6   5        1       1         2      sup-inf   4      1       0       0    \n",
              "7   6        1       1         2      sup-inf   2      1       0       0    \n",
              "8   7        1       1         2      sup-inf   4      1       0       0    \n",
              "9   8        1       1         1      sup-inf   4      1       0       0    \n",
              "10  9        1       1         1      sup-inf   4      1       0       0    \n",
              "11  11       1       1         2      sup-inf   1      1       0       0    \n",
              "12  12       1       1         2      sup-inf   4      1       0       0    \n",
              "13  13       1       1         2      sup-inf   4      1       0       0    \n",
              "14  14       1       1         2      sup-inf   4      1       0       0    \n",
              "15  15       1       1         2      sup-inf   4      1       0       0    \n",
              "16  16       1       1         2      sup-inf   2      1       0       0    \n",
              "17  17       1       5         1      sup-inf   4      1       0       0    \n",
              "18  18       1       1         2      sup-inf   2      1       0       0    \n",
              "19  23       1       5         2      sup-inf   4      1       0       0    \n",
              "20  26       1       1         2      sup-inf   4      1       0       0    \n",
              "21  27       1       1         2      sup-inf   4      1       0       0    \n",
              "22  28       1       1         2      sup-inf   4      1       0       0    \n",
              "23  30       1       1         2      sup-inf   4      1       0       0    \n",
              "24  32       1       1         1      sup-inf   4      1       0       0    \n",
              "25  33       1       1         2      sup-inf   4      1       0       0    \n",
              "26  36       1       1         2      sup-inf   4      1       0       0    \n",
              "27  44       1       1         1      sup-inf   2      1       0       0    \n",
              "28  46       1       1         2      sup-inf   4      1       0       0    \n",
              "29  0        1       1         2      inf-sup   4      0       1       0    \n",
              "30  1        1       1         2      inf-sup   4      0       1       0    \n",
              "⋮   ⋮        ⋮       ⋮         ⋮      ⋮         ⋮      ⋮       ⋮       ⋮    \n",
              "503 8        1       1         1      inf-sup.7 1      0       1       0    \n",
              "504 9        1       1         1      inf-sup.7 4      0       1       0    \n",
              "505 11       1       1         2      inf-sup.7 4      0       1       0    \n",
              "506 12       1       1         2      inf-sup.7 4      0       1       0    \n",
              "507 13       1       1         2      inf-sup.7 4      0       1       0    \n",
              "508 14       1       1         2      inf-sup.7 4      0       1       0    \n",
              "509 15       1       1         2      inf-sup.7 4      0       1       0    \n",
              "510 16       1       1         2      inf-sup.7 1      0       1       0    \n",
              "511 17       1       5         1      inf-sup.7 3      0       1       0    \n",
              "512 18       1       1         2      inf-sup.7 4      0       1       0    \n",
              "513 23       1       5         2      inf-sup.7 4      0       1       0    \n",
              "514 0        1       1         2      equal.7   4      0       0       1    \n",
              "515 1        1       1         2      equal.7   4      0       0       1    \n",
              "516 2        1       1         2      equal.7   2      0       0       1    \n",
              "517 3        1       1         2      equal.7   4      0       0       1    \n",
              "518 4        1       4         2      equal.7   4      0       0       1    \n",
              "519 5        1       1         2      equal.7   3      0       0       1    \n",
              "520 6        1       1         2      equal.7   4      0       0       1    \n",
              "521 7        1       1         2      equal.7   4      0       0       1    \n",
              "522 8        1       1         1      equal.7   4      0       0       1    \n",
              "523 9        1       1         1      equal.7   4      0       0       1    \n",
              "524 11       1       1         2      equal.7   4      0       0       1    \n",
              "525 12       1       1         2      equal.7   1      0       0       1    \n",
              "526 13       1       1         2      equal.7   1      0       0       1    \n",
              "527 14       1       1         2      equal.7   4      0       0       1    \n",
              "528 15       1       1         2      equal.7   3      0       0       1    \n",
              "529 16       1       1         2      equal.7   3      0       0       1    \n",
              "530 17       1       5         1      equal.7   4      0       0       1    \n",
              "531 18       1       1         2      equal.7   2      0       0       1    \n",
              "532 23       1       5         2      equal.7   3      0       0       1    \n",
              "    ironic nonironic rude polite\n",
              "1   0      1         0    1     \n",
              "2   0      1         0    1     \n",
              "3   0      1         0    1     \n",
              "4   0      1         0    1     \n",
              "5   0      1         1    0     \n",
              "6   0      1         0    1     \n",
              "7   1      0         0    1     \n",
              "8   0      1         0    1     \n",
              "9   0      1         0    1     \n",
              "10  0      1         0    1     \n",
              "11  1      0         1    0     \n",
              "12  0      1         0    1     \n",
              "13  0      1         0    1     \n",
              "14  0      1         0    1     \n",
              "15  0      1         0    1     \n",
              "16  1      0         0    1     \n",
              "17  0      1         0    1     \n",
              "18  1      0         0    1     \n",
              "19  0      1         0    1     \n",
              "20  0      1         0    1     \n",
              "21  0      1         0    1     \n",
              "22  0      1         0    1     \n",
              "23  0      1         0    1     \n",
              "24  0      1         0    1     \n",
              "25  0      1         0    1     \n",
              "26  0      1         0    1     \n",
              "27  1      0         0    1     \n",
              "28  0      1         0    1     \n",
              "29  0      1         0    1     \n",
              "30  0      1         0    1     \n",
              "⋮   ⋮      ⋮         ⋮    ⋮     \n",
              "503 1      0         1    0     \n",
              "504 0      1         0    1     \n",
              "505 0      1         0    1     \n",
              "506 0      1         0    1     \n",
              "507 0      1         0    1     \n",
              "508 0      1         0    1     \n",
              "509 0      1         0    1     \n",
              "510 1      0         1    0     \n",
              "511 0      1         1    0     \n",
              "512 0      1         0    1     \n",
              "513 0      1         0    1     \n",
              "514 0      1         0    1     \n",
              "515 0      1         0    1     \n",
              "516 1      0         0    1     \n",
              "517 0      1         0    1     \n",
              "518 0      1         0    1     \n",
              "519 0      1         1    0     \n",
              "520 0      1         0    1     \n",
              "521 0      1         0    1     \n",
              "522 0      1         0    1     \n",
              "523 0      1         0    1     \n",
              "524 0      1         0    1     \n",
              "525 1      0         1    0     \n",
              "526 1      0         1    0     \n",
              "527 0      1         0    1     \n",
              "528 0      1         1    0     \n",
              "529 0      1         1    0     \n",
              "530 0      1         0    1     \n",
              "531 1      0         0    1     \n",
              "532 0      1         1    0     "
            ],
            "text/html": [
              "<table class=\"dataframe\">\n",
              "<caption>A data.frame: 532 × 13</caption>\n",
              "<thead>\n",
              "\t<tr><th scope=col>response</th><th scope=col>consent</th><th scope=col>age_range</th><th scope=col>gender</th><th scope=col>question</th><th scope=col>Answer</th><th scope=col>sup.inf</th><th scope=col>inf.sup</th><th scope=col>equal</th><th scope=col>ironic</th><th scope=col>nonironic</th><th scope=col>rude</th><th scope=col>polite</th></tr>\n",
              "\t<tr><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
              "</thead>\n",
              "<tbody>\n",
              "\t<tr><td>0 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>1 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>2 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>3 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>4 </td><td>1</td><td>4</td><td>2</td><td>sup-inf</td><td>3</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>5 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>6 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>2</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>7 </td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>8 </td><td>1</td><td>1</td><td>1</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>9 </td><td>1</td><td>1</td><td>1</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>11</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>12</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>13</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>14</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>15</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>16</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>2</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>17</td><td>1</td><td>5</td><td>1</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>18</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>2</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>23</td><td>1</td><td>5</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>26</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>27</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>28</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>30</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>32</td><td>1</td><td>1</td><td>1</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>33</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>36</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>44</td><td>1</td><td>1</td><td>1</td><td>sup-inf</td><td>2</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>46</td><td>1</td><td>1</td><td>2</td><td>sup-inf</td><td>4</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>0 </td><td>1</td><td>1</td><td>2</td><td>inf-sup</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>1 </td><td>1</td><td>1</td><td>2</td><td>inf-sup</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td></tr>\n",
              "\t<tr><td>8 </td><td>1</td><td>1</td><td>1</td><td>inf-sup.7</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>9 </td><td>1</td><td>1</td><td>1</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>11</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>12</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>13</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>14</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>15</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>16</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>17</td><td>1</td><td>5</td><td>1</td><td>inf-sup.7</td><td>3</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>18</td><td>1</td><td>1</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>23</td><td>1</td><td>5</td><td>2</td><td>inf-sup.7</td><td>4</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>0 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>1 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>2 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>2</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>3 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>4 </td><td>1</td><td>4</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>5 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>3</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>6 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>7 </td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>8 </td><td>1</td><td>1</td><td>1</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>9 </td><td>1</td><td>1</td><td>1</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>11</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>12</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>13</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>14</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>15</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>3</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>16</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>3</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "\t<tr><td>17</td><td>1</td><td>5</td><td>1</td><td>equal.7  </td><td>4</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>18</td><td>1</td><td>1</td><td>2</td><td>equal.7  </td><td>2</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td></tr>\n",
              "\t<tr><td>23</td><td>1</td><td>5</td><td>2</td><td>equal.7  </td><td>3</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr>\n",
              "</tbody>\n",
              "</table>\n"
            ],
            "text/markdown": "\nA data.frame: 532 × 13\n\n| response &lt;fct&gt; | consent &lt;dbl&gt; | age_range &lt;dbl&gt; | gender &lt;dbl&gt; | question &lt;chr&gt; | Answer &lt;dbl&gt; | sup.inf &lt;int&gt; | inf.sup &lt;int&gt; | equal &lt;int&gt; | ironic &lt;int&gt; | nonironic &lt;int&gt; | rude &lt;int&gt; | polite &lt;int&gt; |\n|---|---|---|---|---|---|---|---|---|---|---|---|---|\n| 0  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 1  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 2  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 3  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 4  | 1 | 4 | 2 | sup-inf | 3 | 1 | 0 | 0 | 0 | 1 | 1 | 0 |\n| 5  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 6  | 1 | 1 | 2 | sup-inf | 2 | 1 | 0 | 0 | 1 | 0 | 0 | 1 |\n| 7  | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 8  | 1 | 1 | 1 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 9  | 1 | 1 | 1 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 11 | 1 | 1 | 2 | sup-inf | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 |\n| 12 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 13 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 14 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 15 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 16 | 1 | 1 | 2 | sup-inf | 2 | 1 | 0 | 0 | 1 | 0 | 0 | 1 |\n| 17 | 1 | 5 | 1 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 18 | 1 | 1 | 2 | sup-inf | 2 | 1 | 0 | 0 | 1 | 0 | 0 | 1 |\n| 23 | 1 | 5 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 26 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 27 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 28 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 30 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 32 | 1 | 1 | 1 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 33 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 36 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 44 | 1 | 1 | 1 | sup-inf | 2 | 1 | 0 | 0 | 1 | 0 | 0 | 1 |\n| 46 | 1 | 1 | 2 | sup-inf | 4 | 1 | 0 | 0 | 0 | 1 | 0 | 1 |\n| 0  | 1 | 1 | 2 | inf-sup | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 1  | 1 | 1 | 2 | inf-sup | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ |\n| 8  | 1 | 1 | 1 | inf-sup.7 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 |\n| 9  | 1 | 1 | 1 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 11 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 12 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 13 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 14 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 15 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 16 | 1 | 1 | 2 | inf-sup.7 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 |\n| 17 | 1 | 5 | 1 | inf-sup.7 | 3 | 0 | 1 | 0 | 0 | 1 | 1 | 0 |\n| 18 | 1 | 1 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 23 | 1 | 5 | 2 | inf-sup.7 | 4 | 0 | 1 | 0 | 0 | 1 | 0 | 1 |\n| 0  | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 1  | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 2  | 1 | 1 | 2 | equal.7   | 2 | 0 | 0 | 1 | 1 | 0 | 0 | 1 |\n| 3  | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 4  | 1 | 4 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 5  | 1 | 1 | 2 | equal.7   | 3 | 0 | 0 | 1 | 0 | 1 | 1 | 0 |\n| 6  | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 7  | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 8  | 1 | 1 | 1 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 9  | 1 | 1 | 1 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 11 | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 12 | 1 | 1 | 2 | equal.7   | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 |\n| 13 | 1 | 1 | 2 | equal.7   | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 |\n| 14 | 1 | 1 | 2 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 15 | 1 | 1 | 2 | equal.7   | 3 | 0 | 0 | 1 | 0 | 1 | 1 | 0 |\n| 16 | 1 | 1 | 2 | equal.7   | 3 | 0 | 0 | 1 | 0 | 1 | 1 | 0 |\n| 17 | 1 | 5 | 1 | equal.7   | 4 | 0 | 0 | 1 | 0 | 1 | 0 | 1 |\n| 18 | 1 | 1 | 2 | equal.7   | 2 | 0 | 0 | 1 | 1 | 0 | 0 | 1 |\n| 23 | 1 | 5 | 2 | equal.7   | 3 | 0 | 0 | 1 | 0 | 1 | 1 | 0 |\n\n",
            "text/latex": "A data.frame: 532 × 13\n\\begin{tabular}{lllllllllllll}\n response & consent & age\\_range & gender & question & Answer & sup.inf & inf.sup & equal & ironic & nonironic & rude & polite\\\\\n <fct> & <dbl> & <dbl> & <dbl> & <chr> & <dbl> & <int> & <int> & <int> & <int> & <int> & <int> & <int>\\\\\n\\hline\n\t 0  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 1  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 2  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 3  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 4  & 1 & 4 & 2 & sup-inf & 3 & 1 & 0 & 0 & 0 & 1 & 1 & 0\\\\\n\t 5  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 6  & 1 & 1 & 2 & sup-inf & 2 & 1 & 0 & 0 & 1 & 0 & 0 & 1\\\\\n\t 7  & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 8  & 1 & 1 & 1 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 9  & 1 & 1 & 1 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 11 & 1 & 1 & 2 & sup-inf & 1 & 1 & 0 & 0 & 1 & 0 & 1 & 0\\\\\n\t 12 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 13 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 14 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 15 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 16 & 1 & 1 & 2 & sup-inf & 2 & 1 & 0 & 0 & 1 & 0 & 0 & 1\\\\\n\t 17 & 1 & 5 & 1 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 18 & 1 & 1 & 2 & sup-inf & 2 & 1 & 0 & 0 & 1 & 0 & 0 & 1\\\\\n\t 23 & 1 & 5 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 26 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 27 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 28 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 30 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 32 & 1 & 1 & 1 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 33 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 36 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 44 & 1 & 1 & 1 & sup-inf & 2 & 1 & 0 & 0 & 1 & 0 & 0 & 1\\\\\n\t 46 & 1 & 1 & 2 & sup-inf & 4 & 1 & 0 & 0 & 0 & 1 & 0 & 1\\\\\n\t 0  & 1 & 1 & 2 & inf-sup & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 1  & 1 & 1 & 2 & inf-sup & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮\\\\\n\t 8  & 1 & 1 & 1 & inf-sup.7 & 1 & 0 & 1 & 0 & 1 & 0 & 1 & 0\\\\\n\t 9  & 1 & 1 & 1 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 11 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 12 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 13 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 14 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 15 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 16 & 1 & 1 & 2 & inf-sup.7 & 1 & 0 & 1 & 0 & 1 & 0 & 1 & 0\\\\\n\t 17 & 1 & 5 & 1 & inf-sup.7 & 3 & 0 & 1 & 0 & 0 & 1 & 1 & 0\\\\\n\t 18 & 1 & 1 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 23 & 1 & 5 & 2 & inf-sup.7 & 4 & 0 & 1 & 0 & 0 & 1 & 0 & 1\\\\\n\t 0  & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 1  & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 2  & 1 & 1 & 2 & equal.7   & 2 & 0 & 0 & 1 & 1 & 0 & 0 & 1\\\\\n\t 3  & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 4  & 1 & 4 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 5  & 1 & 1 & 2 & equal.7   & 3 & 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n\t 6  & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 7  & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 8  & 1 & 1 & 1 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 9  & 1 & 1 & 1 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 11 & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 12 & 1 & 1 & 2 & equal.7   & 1 & 0 & 0 & 1 & 1 & 0 & 1 & 0\\\\\n\t 13 & 1 & 1 & 2 & equal.7   & 1 & 0 & 0 & 1 & 1 & 0 & 1 & 0\\\\\n\t 14 & 1 & 1 & 2 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 15 & 1 & 1 & 2 & equal.7   & 3 & 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n\t 16 & 1 & 1 & 2 & equal.7   & 3 & 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n\t 17 & 1 & 5 & 1 & equal.7   & 4 & 0 & 0 & 1 & 0 & 1 & 0 & 1\\\\\n\t 18 & 1 & 1 & 2 & equal.7   & 2 & 0 & 0 & 1 & 1 & 0 & 0 & 1\\\\\n\t 23 & 1 & 5 & 2 & equal.7   & 3 & 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n\\end{tabular}\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model1 <- clmm(as.factor(ironic) ~ age_range + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "xZJDO9R6_Ch6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "PbomkEu7_Kl2",
        "outputId": "08d4f062-24f8-4db3-fa16-04d748306243"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(ironic) ~ age_range + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -287.69 581.38 68(216) 7.96e-05 1.2e+01\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.4282   0.6543  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "          Estimate Std. Error z value Pr(>|z|)   \n",
              "age_range  -0.4482     0.1703  -2.633  0.00847 **\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   0.5681     0.2799    2.03"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model2 <- clmm(as.factor(nonironic) ~ age_range + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "l2n5ggW077h_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "wzNsFMgU7_yW",
        "outputId": "c0d37276-1d60-4851-c9f1-4236abf5932b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(nonironic) ~ age_range + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -287.69 581.38 68(216) 8.00e-05 1.2e+01\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.4282   0.6543  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "          Estimate Std. Error z value Pr(>|z|)   \n",
              "age_range   0.4482     0.1703   2.633  0.00847 **\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -0.5681     0.2799   -2.03"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model3 <- clmm(as.factor(rude) ~ age_range + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "w4nYMm-w_o-Z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "id": "4sfez7TH_v4M",
        "outputId": "48a0604d-2b9f-4ca8-ea61-7146075eeca7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(rude) ~ age_range + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.25 604.49 81(256) 2.45e-05 1.6e+01\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3652   0.6044  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "          Estimate Std. Error z value Pr(>|z|)\n",
              "age_range   0.1481     0.1266    1.17    0.242\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.3920     0.2568   5.421"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model4 <- clmm(as.factor(polite) ~ age_range + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "VAqJd0mK_yjJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "id": "lLA2XBJg_4Gt",
        "outputId": "a68201b3-0516-4527-8044-e77caacbbb91"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(polite) ~ age_range + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.25 604.49 81(256) 2.45e-05 1.6e+01\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3652   0.6044  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "          Estimate Std. Error z value Pr(>|z|)\n",
              "age_range  -0.1481     0.1266   -1.17    0.242\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.3920     0.2568  -5.421"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model5 <- clmm(as.factor(ironic) ~ gender + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "40WPyzecHTba"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model5)"
      ],
      "metadata": {
        "id": "j5xdwbEVHlpt",
        "outputId": "c77d92fa-3c57-4a1b-8423-4583d5682755",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(ironic) ~ gender + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -291.17 588.34 71(226) 3.36e-05 1.3e+02\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6417   0.8011  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "       Estimate Std. Error z value Pr(>|z|)\n",
              "gender  0.05105    0.50265   0.102    0.919\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1    1.300      0.929     1.4"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model6 <- clmm(as.factor(nonironic) ~ gender + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "ssJASsuQHTi1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model6)"
      ],
      "metadata": {
        "id": "J4L-TbRIHk-S",
        "outputId": "f38cc3f3-2521-4b8a-c4f7-0deb8b79260a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(nonironic) ~ gender + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -291.17 588.34 71(226) 3.36e-05 1.3e+02\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6417   0.8011  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "       Estimate Std. Error z value Pr(>|z|)\n",
              "gender -0.05105    0.50269  -0.102    0.919\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.3002     0.9291  -1.399"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model7 <- clmm(as.factor(rude) ~ gender + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "aCJcrOfMHTpN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model7)"
      ],
      "metadata": {
        "id": "MG2r6Mc-Hy1e",
        "outputId": "a66dede2-eaa9-4073-88b0-7d83df61c7a7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(rude) ~ gender + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.89 605.78 64(205) 2.09e-05 1.3e+02\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3897   0.6242  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "       Estimate Std. Error z value Pr(>|z|)\n",
              "gender  -0.1124     0.4215  -0.267     0.79\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   0.9733     0.7840   1.241"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "irony_model8 <- clmm(as.factor(polite) ~ gender + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "yNme54IWHTu5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(irony_model8)"
      ],
      "metadata": {
        "id": "wWcmouB9H2XG",
        "outputId": "276dbf62-a494-4bae-8011-7d2ffe6c534b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(polite) ~ gender + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.89 605.78 64(205) 2.11e-05 1.3e+02\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3897   0.6242  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "       Estimate Std. Error z value Pr(>|z|)\n",
              "gender   0.1124     0.4215   0.267     0.79\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -0.9733     0.7840  -1.241"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d1 <- clmm(as.factor(ironic) ~ sup.inf + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "HMRpEuNuFqy8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d1)"
      ],
      "metadata": {
        "id": "os7YYwnfGSZ8",
        "outputId": "a763c736-7c66-4d9b-b73c-f35788f342dd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(ironic) ~ sup.inf + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter    max.grad cond.H \n",
              " logit flexible  532  -290.61 587.23 106(326) 1.27e-04 2.5e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6505   0.8065  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)\n",
              "sup.inf   0.2319     0.2185   1.061    0.289\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.2915     0.2141   6.033"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d2 <- clmm(as.factor(nonironic) ~ sup.inf + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "YEHPNyGcGbhk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d2)"
      ],
      "metadata": {
        "id": "oWgFCVehGgvH",
        "outputId": "f3785c76-24fc-4bf5-dc4d-e1fb08845a34",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(nonironic) ~ sup.inf + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter    max.grad cond.H \n",
              " logit flexible  532  -290.61 587.23 106(326) 1.26e-04 2.5e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6505   0.8065  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)\n",
              "sup.inf  -0.2319     0.2185  -1.061    0.289\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.2915     0.2141  -6.033"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d3 <- clmm(as.factor(rude) ~ sup.inf + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "bEsvWeflJx4T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d3)"
      ],
      "metadata": {
        "id": "tejWhy_qJyci",
        "outputId": "fb6ea9ef-a5b9-4fbf-f666-d85dd520c16e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(rude) ~ sup.inf + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.92 605.83 98(302) 1.67e-05 3.6e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3916   0.6258  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)\n",
              "sup.inf  0.02484    0.21495   0.116    0.908\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.1866     0.1874   6.332"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d4 <- clmm(as.factor(polite) ~ sup.inf + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "BuQBjM42JymH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d4)"
      ],
      "metadata": {
        "id": "91zMJRpWJy3_",
        "outputId": "8b8aeacc-920f-44d8-a53c-b895fe296cbd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(polite) ~ sup.inf + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -299.92 605.83 98(302) 1.66e-05 3.6e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.3916   0.6258  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)\n",
              "sup.inf -0.02484    0.21495  -0.116    0.908\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.1866     0.1874  -6.332"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d5 <- clmm(as.factor(ironic) ~ inf.sup + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "wzfOEhRhJ_e7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d5)"
      ],
      "metadata": {
        "id": "G7A0cWsqJ_7m",
        "outputId": "e6501d53-7efe-4a8c-80ce-2af4f4a56ee4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(ironic) ~ inf.sup + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -285.36 576.73 71(221) 3.65e-04 2.2e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.689    0.8301  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)   \n",
              "inf.sup  -0.8072     0.2458  -3.284  0.00103 **\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   0.9935     0.2095   4.741"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d6 <- clmm(as.factor(nonironic) ~ inf.sup + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "Xqq2UpylKAEJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d6)"
      ],
      "metadata": {
        "id": "oMz9hyHoKALj",
        "outputId": "cf53b7bd-78c1-47a0-ed83-267e44a4bac7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(nonironic) ~ inf.sup + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -285.36 576.73 71(221) 3.65e-04 2.2e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.689    0.8301  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)   \n",
              "inf.sup   0.8072     0.2458   3.284  0.00103 **\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -0.9935     0.2095  -4.741"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d7 <- clmm(as.factor(rude) ~ inf.sup + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "KDzkEYugKA_i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d7)"
      ],
      "metadata": {
        "id": "2oBZp8s_KBq_",
        "outputId": "c232cdc9-d663-4bc5-fb70-505db31a188c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(rude) ~ inf.sup + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -297.31 600.63 91(281) 5.53e-04 3.1e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.4116   0.6416  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)  \n",
              "inf.sup  -0.5152     0.2303  -2.237   0.0253 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.0336     0.1839   5.622"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d8 <- clmm(as.factor(polite) ~ inf.sup + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "AwlrZWx6KByZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d8)"
      ],
      "metadata": {
        "id": "2QtUp4gWKCLK",
        "outputId": "3d0f8158-8bab-409a-8b34-64b1371096db",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(polite) ~ inf.sup + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -297.31 600.63 91(281) 5.56e-04 3.1e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.4116   0.6416  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "        Estimate Std. Error z value Pr(>|z|)  \n",
              "inf.sup   0.5152     0.2303   2.237   0.0253 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.0336     0.1839  -5.622"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d9 <- clmm(as.factor(ironic) ~ equal + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "s2ZuMt4qKb5J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d9)"
      ],
      "metadata": {
        "id": "im6R-fcCKcAD",
        "outputId": "bcdd036e-3ab9-498a-e8a2-f189c8784ada",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(ironic) ~ equal + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -288.74 583.49 90(278) 5.72e-04 2.6e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6637   0.8147  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "      Estimate Std. Error z value Pr(>|z|)  \n",
              "equal   0.4810     0.2176   2.211   0.0271 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.3867     0.2176   6.373"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d10 <- clmm(as.factor(nonironic) ~ equal + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "zcaIt7y5KcGa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d10)"
      ],
      "metadata": {
        "id": "OFKIyJKiKcNF",
        "outputId": "735cdcbd-002b-4d00-a121-96a6bfc25e7f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(nonironic) ~ equal + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter   max.grad cond.H \n",
              " logit flexible  532  -288.74 583.49 90(278) 4.31e-04 2.6e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.6637   0.8147  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "      Estimate Std. Error z value Pr(>|z|)  \n",
              "equal  -0.4810     0.2176  -2.211   0.0271 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.3867     0.2176  -6.373"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d11 <- clmm(as.factor(rude) ~ equal + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "zUWbM6CCKcUd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d11)"
      ],
      "metadata": {
        "id": "9IFF4acIKcb3",
        "outputId": "e92c673c-55c6-48e5-f6c1-de1fa9b9e68a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(rude) ~ equal + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter    max.grad cond.H \n",
              " logit flexible  532  -297.74 601.48 100(308) 3.37e-05 3.7e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.405    0.6364  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "      Estimate Std. Error z value Pr(>|z|)  \n",
              "equal   0.4444     0.2118   2.098   0.0359 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1   1.3428     0.1931   6.953"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "power_d12 <- clmm(as.factor(polite) ~ equal + (1 | response), data = my_data)"
      ],
      "metadata": {
        "id": "Xs-fiW60KcjL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "summary(power_d12)"
      ],
      "metadata": {
        "id": "zhtqo-vSKcqt",
        "outputId": "4debbd4d-9fa7-4248-9606-5b2a95040b06",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cumulative Link Mixed Model fitted with the Laplace approximation\n",
              "\n",
              "formula: as.factor(polite) ~ equal + (1 | response)\n",
              "data:    my_data\n",
              "\n",
              " link  threshold nobs logLik  AIC    niter    max.grad cond.H \n",
              " logit flexible  532  -297.74 601.48 100(308) 3.38e-05 3.7e+00\n",
              "\n",
              "Random effects:\n",
              " Groups   Name        Variance Std.Dev.\n",
              " response (Intercept) 0.405    0.6364  \n",
              "Number of groups:  response 28 \n",
              "\n",
              "Coefficients:\n",
              "      Estimate Std. Error z value Pr(>|z|)  \n",
              "equal  -0.4444     0.2118  -2.098   0.0359 *\n",
              "---\n",
              "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n",
              "\n",
              "Threshold coefficients:\n",
              "    Estimate Std. Error z value\n",
              "0|1  -1.3428     0.1931  -6.953"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "R",
      "name": "ir"
    },
    "language_info": {
      "name": "R"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
